name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

jobs:
  build-release:
    name: Build package and create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necesario para setuptools_scm y tags

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Check tag matches package version
        shell: bash
        run: |
          TAG="${GITHUB_REF_NAME#v}"
          WHEEL=$(ls dist/*.whl | head -n1)
          echo "Wheel: $WHEEL"
          PKG_VER=$(basename "$WHEEL" | sed -E 's/^youtube_playlist_watcher-([0-9][^-]*)-.*/\1/')
          echo "Tag: $TAG | Package: $PKG_VER"
          if [ "$TAG" != "$PKG_VER" ]; then
            echo "Tag version and built package version do not match" >&2
            exit 1
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            dist/*.whl
            dist/*.tar.gz

  docker:
    name: Build and push Docker image
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version
        id: vars
        run: echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Build and push
        if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/youtube-watcher:${{ steps.vars.outputs.VERSION }}
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/youtube-watcher:latest
          build-args: |
            YT_DLP_VERSION=${{ vars.YT_DLP_VERSION }}
